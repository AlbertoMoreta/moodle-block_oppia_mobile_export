name: Oppia Mobile Export CI

on: [push, pull_request]

jobs:
  test_and_validate:
    runs-on: ubuntu-22.04

    services:
      mariadb:
        image: mariadb:10
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
          MYSQL_CHARACTER_SET_SERVER: "utf8mb4"
          MYSQL_COLLATION_SERVER: "utf8mb4_unicode_ci"

        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 3

    strategy:
      fail-fast: false
      matrix:
        php: ['7.3', '8.0']
        moodle-branch: ['MOODLE_400_STABLE']
        database: [mariadb]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: plugin

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ matrix.extensions }}
          ini-values: max_input_vars=5000
          tools: behat
          # none to use phpdbg fallback. Specify pcov (Moodle 3.10 and up) or xdebug to use them instead.
          coverage: xdebug

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          sudo locale-gen en_AU.UTF-8
          echo "NVM_DIR=$HOME/.nvm" >> $GITHUB_ENV

      - name: Install moodle-plugin-ci
        run: |
          moodle-plugin-ci install --plugin ./plugin --db-host=127.0.0.1
        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}
          WWWROOT: "http://localhost:8000/moodle"
          BEHATWWWROOT: "http://127.0.0.1:8000/moodle"

      # - name: PHPUnit tests
      #   if: ${{ always() }}
      #   run: moodle-plugin-ci phpunit --fail-on-warning

      - name: Behat features
        if: ${{ always() }}
        run: |
          composer require --dev moodlehq/behat-extension
          composer require --dev behat/behat
          composer require --dev behat/mink
          composer require --dev behat/mink-extension --with-all-dependencies
          composer require --dev behat/mink-goutte-driver
          composer require --dev behat/mink-selenium2-driver
          composer require --dev dvdoug/behat-code-coverage
          nohup php -S localhost:8000 -t web/ > phpd.log 2>&1 &
          php --server http://localhost:8000 &
          BEHAT_PATH=`pwd`/moodle/vendor/bin/behat
          BEHAT_CONFIG=`pwd`/moodle/blocks/oppia_mobile_export/tests/behat/behat.yml
          $BEHAT_PATH --init
          $BEHAT_PATH --config $BEHAT_CONFIG --tags=ci

      - name: Upload artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: behat_log
          path: behat.log

      - name: Check upgrade savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: PHP Lint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: PHP Copy/Paste Detector
        continue-on-error: true # This step will show errors but will not fail
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: PHP Mess Detector
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Moodle Code Checker
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      # - name: Moodle PHPDoc Checker
      #   continue-on-error: true
      #   if: ${{ always() }}
      #   run: moodle-plugin-ci phpdoc

      - name: Validating
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Mustache Lint
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci mustache

      - name: Grunt
        continue-on-error: true
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

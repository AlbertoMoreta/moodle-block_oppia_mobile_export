
<div id="feedback_{{id}}" class="wrap-collabsible">
    <input id="collapsible_{{id}}" class="toggle" type="checkbox">
    <label for="collapsible_{{id}}" class="lbl-toggle">{{name}}</label>
    <div class="collapsible-content">
        <div class="content-inner">
            <div class="quizzes-table">
                <div class="pure-g titles">
                    <div class="pure-u-lg-8-24 pure-u-sm-1-3 text-center">Grade</div>
                    <div class="pure-u-lg-14-24 pure-u-sm-2-3 text-center">Message</div>
                </div>

                <div class="pure-g grade-boundary-row">
                    <div class="pure-u-lg-4-24 pure-u-sm-1-4 pure-u-1">
                        <input type="hidden" name="grade_{{id}}[]" value="100" />
                        100%
                    </div>
                    <button type="button" class="pure-u-lg-2-24 pure-u-sm-1-4 add-row-btn">+</button>
                    <div class="pure-u-lg-16-24 pure-u-sm-2-3 pure-u-1 px-6">
                        <input class="form-control" name="message_{{id}}[]" style="width:100%" value="{{grade_100_message}}">
                    </div>
                </div>

                {{# gradeBoundaries }}
                    <div class="pure-g grade-boundary-row">
                        {{> block_oppia_mobile_export/grade_boundary_extra_row }}
                    </div>
                {{/ gradeBoundaries }}

                <div class="pure-g grade-boundary-row">
                    <div class="pure-u-lg-4-24 pure-u-sm-1-4 pure-u-1">
                        <input type="hidden" name="grade_{{id}}[]" value="0" />
                        >= 0%
                    </div>
                    <div class="pure-u-lg-16-24 pure-u-sm-2-3 pure-u-1 px-6">
                        <input class="form-control" name="message_{{id}}[]" style="width:100%" value="{{grade_0_message}}">
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<script type="module">

    import Mustache from '../js/mustache.js';

    var grades = [];
    for(var i=0; i<19; i++) {
        grades[i] = { grade: 95 - i * 5 };
    }

    function add_row(e) {
        var btn = e.target;
        var new_row = document.createElement("div");
        new_row.className = "pure-g grade-boundary-row";
        var data = {
            feedback_id: {{id}},
            grades: grades,
        };
        fetch('../templates/grade_boundary_extra_row.mustache')
                .then((response) => response.text())
                .then((template) => {
                    new_row.innerHTML = Mustache.render(template, data);
                    var add_btn = new_row.getElementsByClassName('add-row-btn')[0];
                    add_btn.addEventListener('click', add_row);

                    var remove_btn = new_row.getElementsByClassName('remove-row-btn')[0];
                    remove_btn.addEventListener('click', remove_row);
                });
        btn.parentNode.parentNode.insertBefore(new_row, btn.parentNode.nextSibling);
    }

    function remove_row(e) {
        e.target.parentNode.remove();
    }

    var feedbackRow = document.getElementById("feedback_{{id}}");

    feedbackRow.querySelectorAll('.add-row-btn').forEach(occurence => {
        occurence.addEventListener('click', (e) => {
            add_row(e);
        });
    });

    feedbackRow.querySelectorAll('.remove-row-btn').forEach(occurence => {
        occurence.addEventListener('click', (e) => {
            remove_row(e);
        });
    });


</script>


